{"version":3,"sources":["webpack:///./src/templates/timer/index.js","webpack:///./src/templates/timer/index.module.scss"],"names":["Template","props","frontmatter","data","markdownRemark","hacking_start","hacking_end","startTime","Date","endTime","difference","state","remainingTime","running","updateTimer","bind","componentDidMount","requestAnimationFrame","this","componentWillUnmount","currentTime","Math","max","setState","render","percentageComplete","name","full_description","jumbotron_image","secs","floor","mins","hours","title","description","image","publicURL","className","styles","background","style","backgroundImage","Component","module","exports"],"mappings":"iMAMMA,E,YACJ,WAAYC,GAAQ,IAAD,EACjB,cAAMA,IAAN,KADiB,IAGTC,EADmBD,EAAME,KAAzBC,eACAF,YACAG,EAA+BH,EAA/BG,cAAeC,EAAgBJ,EAAhBI,YAEjBC,EAAY,IAAIC,KAAKH,GACrBI,EAAU,IAAID,KAAKF,GACnBI,EAAaD,EAAUF,EARZ,OAUjB,EAAKI,MAAQ,CACXC,cAAe,EACfL,YACAE,UACAC,cAEF,EAAKG,SAAU,EACf,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAjBF,E,4CAmBnBC,kBAAA,WACEC,sBAAsBC,KAAKJ,c,EAE7BK,qBAAA,WACED,KAAKL,SAAU,G,EAEjBC,YAAA,WAAe,IAAD,EACmBI,KAAKP,MAA5BJ,EADI,EACJA,UAAWE,EADP,EACOA,QACbW,EAAc,IAAIZ,KAClBI,EAAgBS,KAAKC,IACzB,EACAb,EAAUY,KAAKC,IAAIf,EAAWa,IAGhCF,KAAKK,SAAS,CACZX,kBAEEM,KAAKL,SAASI,sBAAsBC,KAAKJ,c,EAE/CU,OAAA,WAAU,IAEAtB,EADmBgB,KAAKjB,MAAME,KAA9BC,eACAF,YAFD,EAG+BgB,KAAKP,MAAnCC,EAHD,EAGCA,cACFa,EAAqB,IAAOb,EAJ3B,EAGgBF,WACyC,IAExDgB,EAA4CxB,EAA5CwB,KAAMC,EAAsCzB,EAAtCyB,iBAAkBC,EAAoB1B,EAApB0B,gBAE1BC,EAAOR,KAAKS,MAAMlB,EAAgB,KAAQ,GAC1CmB,EAAOV,KAAKS,MAAMlB,EAAgB,IAAO,IAAM,GAC/CoB,EAAQX,KAAKS,MAAMlB,EAAgB,IAAO,GAAK,IAErD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEqB,MAAOP,EACPQ,YAAaP,EACbQ,MAAOP,aAAF,EAAEA,EAAiBQ,YAG1B,6BACEC,UAAWC,IAAOC,WAClBC,MAAO,CACLC,gBAAgB,sCAAuChB,EAAxC,cAGjB,4CACA,uBAAGY,UAAU,aACVL,EADH,QACyB,IAAVA,GAAe,IAD9B,IACoCD,EADpC,OACuD,IAATA,GAAc,IAAK,IAC9DF,EAFH,OAEsB,IAATA,GAAc,Q,GApEda,aA4ER1C,a,qBCjFf2C,EAAOC,QAAU,CAAC,WAAa","file":"component---src-templates-timer-index-js-7299aada4b095ad810f3.js","sourcesContent":["import { graphql } from \"gatsby\"\nimport React, { Component } from \"react\"\nimport { Layout } from \"../../components/Layout\"\nimport { SEO } from \"../../components/SEO\"\nimport styles from \"./index.module.scss\"\n\nclass Template extends Component {\n  constructor(props) {\n    super(props)\n    const { markdownRemark } = props.data\n    const { frontmatter } = markdownRemark\n    const { hacking_start, hacking_end } = frontmatter\n\n    const startTime = new Date(hacking_start)\n    const endTime = new Date(hacking_end)\n    const difference = endTime - startTime\n\n    this.state = {\n      remainingTime: 0,\n      startTime,\n      endTime,\n      difference,\n    }\n    this.running = true\n    this.updateTimer = this.updateTimer.bind(this)\n  }\n  componentDidMount() {\n    requestAnimationFrame(this.updateTimer)\n  }\n  componentWillUnmount() {\n    this.running = false\n  }\n  updateTimer() {\n    const { startTime, endTime } = this.state\n    const currentTime = new Date()\n    const remainingTime = Math.max(\n      0,\n      endTime - Math.max(startTime, currentTime)\n    )\n\n    this.setState({\n      remainingTime,\n    })\n    if (this.running) requestAnimationFrame(this.updateTimer)\n  }\n  render() {\n    const { markdownRemark } = this.props.data\n    const { frontmatter } = markdownRemark\n    const { remainingTime, difference } = this.state\n    const percentageComplete = 100 - (remainingTime / difference) * 100\n\n    const { name, full_description, jumbotron_image } = frontmatter\n\n    const secs = Math.floor(remainingTime / 1000) % 60\n    const mins = Math.floor(remainingTime / 1000 / 60) % 60\n    const hours = Math.floor(remainingTime / 1000 / 60 / 60)\n\n    return (\n      <Layout>\n        <SEO\n          title={name}\n          description={full_description}\n          image={jumbotron_image?.publicURL}\n        />\n\n        <section\n          className={styles.background}\n          style={{\n            backgroundImage: `linear-gradient(to right, #f48c42, ${percentageComplete}%, green)`,\n          }}\n        >\n          <h1>Hacking Time</h1>\n          <p className=\"display-1\">\n            {hours} hour{hours !== 1 && \"s\"} {mins} min{mins !== 1 && \"s\"}{\" \"}\n            {secs} sec{secs !== 1 && \"s\"}\n          </p>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default Template\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      frontmatter {\n        name\n        full_description\n        jumbotron_image {\n          publicURL\n          childImageSharp {\n            fluid(maxWidth: 2160) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        hacking_start\n        hacking_end\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"index-module--background--PBghZ\"};"],"sourceRoot":""}